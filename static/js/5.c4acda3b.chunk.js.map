{"version":3,"sources":["components/Header.jsx","components/Experience.jsx"],"names":["Header","props","title","className","styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","Experience","theme","useContext","ThemeContext","header","useState","data","setData","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","lineColor","timelineLineColor","map","item","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","subtitle","workType","workDescription","point","children","components","p"],"mappings":"6IAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAO,qBAAKC,UAAU,SAAf,SAAyBD,GACjC,C,8JCKKE,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KAmFHK,UA/Ef,SAAoBd,GAClB,IAAMe,EAAQC,qBAAWC,KACjBC,EAAWlB,EAAXkB,OACR,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,qBAAU,WACRC,MAAMC,IAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACC,GAAD,OAASP,EAAQO,EAAIH,YAArB,IACLK,OAAM,SAACC,GAAD,OAASA,CAAT,GACV,GAAE,IAGD,qCACE,cAAC,UAAD,CAAQ9B,MAAOiB,IAEdE,EAEG,qBAAKlB,UAAU,4BAAf,SACE,cAAC,IAAD,UACE,cAAC,WAAD,CACE8B,UAAWjB,EAAMkB,kBADnB,SAGGb,EAAKc,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,UACE,eAAC,eAAD,CAEEC,SAAUD,EAAKC,SACfC,eAAgB,CAAEC,WAAYvB,EAAMwB,aACpCC,MAAOrC,EAAOU,UACd4B,mBAAoB,CAAEC,MAAO3B,EAAM2B,OALrC,UAOE,oBAAIxC,UAAU,aAAd,SACGiC,EAAKlC,QAER,sBAAKuC,MAAOrC,EAAOI,uBAAnB,UACE,oBAAIiC,MAAK,2BAAOrC,EAAOO,eAAd,IAA6BgC,MAAO3B,EAAMwB,cAAnD,SACGJ,EAAKQ,WAEPR,EAAKS,UACN,qBAAIJ,MAAOrC,EAAOS,YAAlB,qBAEG,IACAuB,EAAKS,eAIV,oBAAIJ,MAAOrC,EAAOC,QAAlB,SACG+B,EAAKU,gBAAgBX,KAAI,SAACY,GAAD,OACxB,gCACE,6BACE,cAAC,IAAD,CACEC,SAAUD,EACVE,WAAY,CACVC,EAAG,YAIT,yBATQH,EADc,QAtBvBX,EAAKlC,MAAQkC,EAAKC,WAHnB,UA6Cd,cAAC,UAAD,MAGX,C","file":"static/js/5.c4acda3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\r\nimport { Container } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport Fade from 'react-reveal';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/experience.css';\r\n\r\nconst styles = {\r\n  ulStyle: {\r\n    listStylePosition: 'outside',\r\n    paddingLeft: 20,\r\n  },\r\n  subtitleContainerStyle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  subtitleStyle: {\r\n    display: 'inline-block',\r\n  },\r\n  inlineChild: {\r\n    display: 'inline-block',\r\n  },\r\n  itemStyle: {\r\n    marginBottom: 10,\r\n  },\r\n};\r\n\r\nfunction Experience(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.experiences, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.experiences))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              <Timeline\r\n                lineColor={theme.timelineLineColor}\r\n              >\r\n                {data.map((item) => (\r\n                  <Fade>\r\n                    <TimelineItem\r\n                      key={item.title + item.dateText}\r\n                      dateText={item.dateText}\r\n                      dateInnerStyle={{ background: theme.accentColor }}\r\n                      style={styles.itemStyle}\r\n                      bodyContainerStyle={{ color: theme.color }}\r\n                    >\r\n                      <h2 className=\"item-title\">\r\n                        {item.title}\r\n                      </h2>\r\n                      <div style={styles.subtitleContainerStyle}>\r\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                          {item.subtitle}\r\n                        </h4>\r\n                        {item.workType && (\r\n                        <h5 style={styles.inlineChild}>\r\n                    &nbsp;Â·\r\n                          {' '}\r\n                          {item.workType}\r\n                        </h5>\r\n                        )}\r\n                      </div>\r\n                      <ul style={styles.ulStyle}>\r\n                        {item.workDescription.map((point) => (\r\n                          <div key={point}>\r\n                            <li>\r\n                              <ReactMarkdown\r\n                                children={point}\r\n                                components={{\r\n                                  p: 'span',\r\n                                }}\r\n                              />\r\n                            </li>\r\n                            <br />\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </TimelineItem>\r\n                  </Fade>\r\n                ))}\r\n              </Timeline>\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nExperience.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Experience;\r\n"],"sourceRoot":""}